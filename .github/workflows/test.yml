name: Run CI tests

on:
  - push
  - pull_request

jobs:
  black:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      # with:
      #   ssh-key: ${{ secrets.PAT_POTASSCO_BOT }}

    - name: auto format code
      uses: psf/black@stable
      if: github.event_name == 'pull_request'
      with:
        options: ""
        src: "./clingox"

    - name: check code formatting
      uses: psf/black@stable
      with:
        src: "./clingox"

    - name: commit and push auto formatted code
      uses: stefanzweifel/git-auto-commit-action@v4
      if: github.event_name == 'pull_request'
      with:
        commit_message: auto format source code

  build:
    name: clingox using python ${{ matrix.python-version }} on ${{ matrix.os }} installing ${{ matrix.requirements }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.6', '3.9']
        requirements: ['requirements.txt', 'requirements-stable.txt']
    needs:
      - black

    steps:
    - uses: actions/checkout@v3

    - name: set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: install prerequisites
      shell: pwsh
      run: pip install -r .github/${{ matrix.requirements }}

    - name: info
      shell: pwsh
      run: python -VV

    - name: test
      shell: pwsh
      run: coverage run -m unittest discover -v

    - name: type check
      shell: pwsh
      run: mypy -p clingox

    - name: lint (pylint)
      if: ${{ matrix.python-version != '3.6' }}
      shell: pwsh
      run: pylint clingox

    - name: lint (flake8)
      shell: pwsh
      run: flake8

    - name: coverage
      if: ${{ matrix.requirements != 'requirements-stable.txt' }}
      shell: pwsh
      run: coverage report --fail-under=100
